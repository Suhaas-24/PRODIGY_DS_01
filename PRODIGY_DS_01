{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "aeb260c0-4ab7-4370-b2ad-47bcbc9194b5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['Data Source', 'World Development Indicators', 'Unnamed: 2'], dtype='object')\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1 entries, 0 to 0\n",
      "Data columns (total 3 columns):\n",
      " #   Column                        Non-Null Count  Dtype  \n",
      "---  ------                        --------------  -----  \n",
      " 0   Data Source                   1 non-null      object \n",
      " 1   World Development Indicators  1 non-null      object \n",
      " 2   Unnamed: 2                    0 non-null      float64\n",
      "dtypes: float64(1), object(2)\n",
      "memory usage: 156.0+ bytes\n",
      "None\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Load the dataset\n",
    "df = pd.read_csv('C:/Users/suhaa/OneDrive/Desktop/data.csv', on_bad_lines='skip')\n",
    "\n",
    "# Check the actual column names\n",
    "print(df.columns)\n",
    "\n",
    "# Verify data types and non-null counts\n",
    "print(df.info())\n",
    "\n",
    "# Bar chart for Gender distribution\n",
    "if 'World Development Indicators' in df.columns:\n",
    "    gender_counts = df['World Development Indicators'].value_counts()\n",
    "    plt.figure(figsize=(8, 6))\n",
    "    gender_counts.plot(kind='bar', color=['blue', 'orange'])\n",
    "    plt.title('Gender Distribution')\n",
    "    plt.xlabel('Gender')\n",
    "    plt.ylabel('Count')\n",
    "    plt.xticks(rotation=0)\n",
    "    plt.show()\n",
    "else:\n",
    "    print(\"Column 'World Development Indicators' not found in the dataset.\")\n",
    "\n",
    "# Histogram for Age distribution\n",
    "if 'Unnamed: 2' in df.columns:\n",
    "    # Convert 'Age' column to numeric type\n",
    "    df['Unnamed: 2'] = pd.to_numeric(df['Unnamed: 2'], errors='coerce')\n",
    "    df.dropna(subset=['Unnamed: 2'], inplace=True)  # Remove rows with missing age values\n",
    "\n",
    "    plt.figure(figsize=(8, 6))\n",
    "    plt.hist(df['Unnamed: 2'], bins=10, color='green', edgecolor='black')\n",
    "    plt.title('Age Distribution')\n",
    "    plt.xlabel('Age')\n",
    "    plt.ylabel('Frequency')\n",
    "    plt.show()\n",
    "else:\n",
    "    print(\"Column 'Unnamed: 2' not found in the dataset.\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cfe3f9c7-a7db-44c7-a41f-0b35a7051e6c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ef850810-de82-4b1c-9f2f-5adcfa581579",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "09a2f9fb-d78c-4613-a96f-000f62f0618c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
